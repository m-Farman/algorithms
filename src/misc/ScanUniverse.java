package misc;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ScanUniverse {

	static int rowNbr[] = new int[] { -1, -1, -1, 0, 0, 1, 1, 1 };
	static int colNbr[] = new int[] { -1, 0, 1, -1, 1, -1, 0, 1 };

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int m = Integer.parseInt(br.readLine());
		int n = Integer.parseInt(br.readLine());

		int[][] universe = new int[m][n];
		for (int i = 0; i < m; i++) {
			String[] input = br.readLine().split("");
			for (int j = 0; j < input.length; j++) {
				universe[i][j] = Integer.parseInt(input[j]);
			}
		}

		find(universe, m, n);
	}

	private static void find(int[][] universe, int m, int n) {

		boolean[][] visited = new boolean[m][n];
		fillBorderZero(universe, visited, m, n);
		int star = 0, galaxy = 0, blackHole = 0;

		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (!visited[i][j]) {

					if (universe[i][j] == 1) {
						if (isStar(universe, visited, i, j, m, n)) {
							visited[i][i] = true;
							star++;
						} else {
							visit(universe, visited, i, j, m, n, 1);
							galaxy++;
						}
					} else {
						visit(universe, visited, i, j, m, n, 0);
						galaxy--;
						blackHole++;
					}

				}
			}
		}

		System.out.println("No of star " + star);
		System.out.println("No of galaxy " + galaxy);
		System.out.println("No of blackHole " + blackHole);

	}

	private static void visit(int[][] universe, boolean[][] visited, int row, int col, int m, int n, int value) {

		visited[row][col] = true;
		for (int k = 0; k < 8; ++k) {
			if (isSafe(universe, row + rowNbr[k], col + colNbr[k], visited, m, n, value)) {
				visit(universe, visited, row + rowNbr[k], col + colNbr[k], m, n, value);
			}
		}

	}

	static boolean isSafe(int[][] universe, int row, int col, boolean[][] visited, int m, int n, int value) {
		return (row >= 0) && (row < m) && (col >= 0) && (col < n)
				&& (universe[row][col] == value && !visited[row][col]);
	}

	private static void fillBorderZero(int[][] universe, boolean[][] visited, int m, int n) {

		for (int i = 0; i < n; i++) {
			if (universe[0][i] == 0) 
				visit(universe, visited, 0, i, m, n, 0);
			if (universe[m-1][i] == 0) 
				visit(universe, visited, m - 1, i, m, n, 0);
			

		}

		for (int i = 1; i < m - 1; i++) {
			if (universe[i][0] == 0) 
				visit(universe, visited, i, 0, m, n, 0);
			if (universe[i][n-1] == 0)
				visit(universe, visited, i, n - 1, m, n, 0);
		}
	}

	static boolean isNotStar(int[][] universe, int row, int col, int m, int n, int value) {
		return (row >= 0) && (row < m) && (col >= 0) && (col < n) && (universe[row][col] != value);
	}

	private static boolean isStar(int[][] universe, boolean[][] visited, int row, int col, int m, int n) {

		for (int k = 0; k < 8; ++k) {

			if (isNotStar(universe, row + rowNbr[k], col + colNbr[k], m, n, 0)) {
				return false;
			}

		}

		return true;
	}

}



// @formatter:off
/*input/output
 * 
1st case:
38
159
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000010000000000000000000000000000000000000000000000000000011111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000001111111100000000000000000000000000000000000000000000011110000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000111111100000000000000000000000000000000000000000001111111000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000011111111000000000000000000000000000000000000000011111111110000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000001111111000000000000000000000000000000000000000111111111111000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000011111110000000000000000000000000000000000000111111111111110000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000001111111100000000000000000000000000000000000111111111111111111111111111000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000111111111000000000000000000000000000000011111111111111111111111111111111110000000000000000
000000000000000000000000000000000000000000000000000000000000000000000011111111000000000000000000000000000000111111111111111111111111111111111111100000000000000
000000000000000000000000000000000000000000000000000000000000000000000001111111000000000000000000000000000011111111111111111111111111111111111111111110000000000
000000000000000000000000000000000000000000000000000000000000000000000001111111100000000000000000000000000011111111111111111111111111111111111111111111110000000
000000000000000000000000000000000000000000000000000000000000000000000001111111100000000000000000000000000111111000000000111111100000001111111111111111110000000
000000000000000000000000000000000000000000000000000000000000000000000011111111110000000000000000000000000111111000000000011110000000001111111111111111111000000
000000000000000000000000011111110000000000000000000000000000000000000011111111100000000000000000000000001111111000000000011110000000000011111111111111111000000
000000000000000000000001111111111111000000000000000000000000000000000011111100000000000000000000000000011111111000000001111110000000000001111111111111111100000
000000000000000000000011111111111111000000000000000000000000000000000000000000000000000000000000000000011111111111111111111110000000000001111111111111111100000
000000000000000000001111111111111111000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111100000000000111111111111111100000
000000000000000000001111111111111111000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111000000000111111111111111000000
000000000000000000001111111111111111000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111100000000001111111111110000000
000000000000000000000111111111111100000000000000000000000000000000000000000000000000000000000000000000000111111111111111111111111100000000000011111111000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111111111111000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
No of star 2
No of galaxy 2
No of blackHole 1
  
--------------------------------------------
2nd case:
5
24
000000000000011100000
000100000000010100000
000000000000011100000
000000011000000000000
000000000000000000000
No of star 1
No of galaxy 1
No of blackHole 1

 * 
 * */
//@formatter:on